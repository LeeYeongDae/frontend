웹(앱) 개발 : 프론트 / 백엔드
- frontend : html, css, javascript, react, vue....
- backend : node.js, java, python, 닷넷...
- 기반기술 : 서버, 네트워크

- frontend
- 브라우저 기반
- 브라우저를 통해서 실행될 수 있는 언어
  1. HTML(HyperText Markup Language)
     웹 브라우저에서 표시되도록 설계된 표준 마크업 언어
     태그
     화면 구조 설계

  2. CSS(Cascading Style Sheets) : 디자인
   - css 파일 위치
     1) head 태그 안 : 길지 않다면 <style>~~~~</style>
     2) inline 처리 : 비추천 style="color: blueviolet"
     3) 외부 파일(추천) : <link rel="stylesheet" href="mycss.css" />

   - 디자인을 반영할 요소 선택
     1) 태그선택자 
     2) 아이디 : #
     3) 클래스 : .
     4) 전체 : *
     5) 자손(자식) : >, 공백
     6) 형제선택자
        1) 인접형제 : + 
        2) 모든형제 : ~
     7) 그룹 : 선택자1, 선택자2 
         여러 선택자를 한꺼번에 동일한 디자인 적용
     8) 속성 선택자
      - [속성명] : [target]
      - [속성명=값] : [target="_blank"]
      - [속성명~=값] : [title~="dog"] - 값과 정확히 일치하는 
      - [속성명^=값] : [class^="test"] 값으로 시작하는
      - [속성명$=값] : 값으로 끝나는
      - [속성명*=값] : 값이 포함된
     9) 가상(pseduo) 클래스 선택자
      - a tag
        :link
        :active
        :visited
      - 다른 요소
        :hover => 마우스가 위에 올라간 상황
        :focus => 초점이 맞춰진 상황
      - ui 변화
        :disabled
        :checked => radio, checkbox에만 해당
     10) 가상 요소 선택자
        ::before
        ::after
     11) 구조 선택자
        :first-child
        :last-child
        :nth-child(N)
     12) 형태 구조 선택자
        :first-of-type
        :last-of-type
        :nth-last-of-type(N)
        :nth-of-type(N)
     13) 부정 선택자
        E:not(S) => S가 아닌 E
